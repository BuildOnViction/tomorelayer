[  {    "type": "get",    "url": "/api/auth?address=:address&signature=:signature",    "title": "User Authentication",    "name": "userGetAuthenticated",    "group": "Authentication",    "description": "<p>This API is for authentication with JWT &amp; typically Eth Address. User must verify their address ownership by signing a message. Both signature &amp; user's wallet address must be sent as query parameters to backend. If signature is verified, an authentication Token shell be returned along with its expiring time. Admin do not need to authenticate</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>User Eth Address</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "signature",            "description": "<p>User Signature by signing pre-defined message (check environment variable REACT_APP_SIGNATURE_MESSAGE)</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>User token to be used</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "exp",            "description": "<p>Expiry time</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"payload\": {\n     \"token\": \"some-very-long-token\",\n     \"exp\": 123455678\n   },\n  \"meta\": \"\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "http://localhost:8888/api/auth"      }    ],    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidSignatureFormat",            "description": "<p>Signature is not a Hex</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAddress",            "description": "<p>Parsed address from Signature doesnt match user'address</p>"          }        ]      },      "examples": [        {          "title": "InvalidSignatureFormat:",          "content": "HTTP/1.1 400 Bad Request\n{\n    \"error\": {\n        \"code\": 400,\n        \"message\": \"Invalid value(s)\",\n        \"detail\": \"Signature message is not a valid hex string\"\n    }\n}",          "type": "json"        },        {          "title": "InvalidAddress:",          "content": "HTTP/1.1 400 Bad Request\n{\n    \"error\": {\n        \"code\": 400,\n        \"message\": \"Invalid value(s)\",\n        \"detail\": \"User Address not matching Signature Address\"\n    }\n}",          "type": "json"        }      ]    },    "version": "0.1.0",    "filename": "backend/api/auth.py",    "groupTitle": "Authentication"  },  {    "type": "post",    "url": "/api/contract",    "title": "Create Contract",    "name": "createContracts",    "group": "Contract",    "description": "<p>This API is for creating Contract. Can be used to create a single contract or multiple contract entities. This API endpoint require Admin Authentication. Newly created contracts shall be updated to Redis as well.</p>",    "permission": [      {        "name": "admin"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "contract",            "description": "<p>Newly-created Contract</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"payload\": {\n    \"id\": 1,\n    \"name\": \"RelayerRegistration\",\n    \"address\": \"contract-address\",\n    \"owner\": \"owner-address\",\n    \"abi\": \"...abi-json\"\n  },\n  \"meta\": \"\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "http://localhost:8888/api/contract"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Admin secret token bearer</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Contract name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "owner",            "description": "<p>Contract owner address, required but can just be any valid string</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>Contract address</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "abi",            "description": "<p>Contract abi</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthenticated",            "description": "<p>Not permitted to create contract</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "Invalid",            "description": "<p>invalid contract payload</p>"          }        ]      },      "examples": [        {          "title": "Unauthorized",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"error\": {\n    \"code\": 401,\n    \"message\": \"Not authorized\"\n  }\n}",          "type": "json"        },        {          "title": "Invalid Contract Payload:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": {\n    \"code\": 400,\n    \"message\": \"Invalid value(s)\",\n    \"detail\": \"contract payload is invaid\"\n  }\n}",          "type": "json"        }      ]    },    "version": "0.1.0",    "filename": "backend/api/contract.py",    "groupTitle": "Contract"  },  {    "type": "get",    "url": "/api/contract",    "title": "Get Contract",    "name": "getContracts",    "group": "Contract",    "description": "<p>This API is for getting Contract. This API endpoint require authentication, either of user or admin.</p>",    "permission": [      {        "name": "user"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "contracts",            "description": "<p>Array of in-use (not-obsolete) Contracts</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"payload\": [\n     {\n       \"name\": \"RelayerRegistration\",\n       \"address\": \"contract-address\",\n       \"owner\": \"owner-address\"\n     },\n     {\n       \"name\": \"TomoXListing\",\n       \"address\": \"contract-address\",\n       \"owner\": \"empty\"\n     }\n   ],\n  \"meta\": \"\"\n}",          "type": "json"        }      ]    },    "header": {      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Content-Type\": \"application/json\",\n  \"Authorization\" \"Bearer user-token-or-admin-token\"\n}",          "type": "json"        }      ],      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users unique access-token</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>Content-Type</p>"          }        ]      }    },    "sampleRequest": [      {        "url": "http://localhost:8888/api/contract"      }    ],    "version": "0.1.0",    "filename": "backend/api/contract.py",    "groupTitle": "Contract"  },  {    "type": "patch",    "url": "/api/contract",    "title": "Update Contract",    "name": "updateContracts",    "group": "Contract",    "description": "<p>This API is for updating Contract. Can update one single contract at a time This API endpoint require Admin Authentication. Updated contract shall be updated to Redis as well.</p>",    "permission": [      {        "name": "admin"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "contract",            "description": "<p>Updated Contract</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"payload\": {\n    \"id\": 1,\n    \"name\": \"RelayerRegistration\",\n    \"address\": \"contract-address\",\n    \"owner\": \"owner-address\",\n    \"abi\": \"...abi-json\"\n  },\n  \"meta\": \"\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "http://localhost:8888/api/contract"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Admin secret token bearer</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Contract ID</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Contract name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "owner",            "description": "<p>Contract owner address, required but can just be any valid string</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "address",            "description": "<p>Contract address</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "abi",            "description": "<p>Contract abi</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthenticated",            "description": "<p>Not permitted to update contract</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "MissingID",            "description": "<p>Missing contract ID</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidContractID",            "description": "<p>Invalid contract id</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "Invalid",            "description": "<p>invalid contract payload</p>"          }        ]      },      "examples": [        {          "title": "Unauthorized",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"error\": {\n    \"code\": 401,\n    \"message\": \"Not authorized\"\n  }\n}",          "type": "json"        },        {          "title": "Missing contract ID",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": {\n    \"code\": 400,\n    \"message\": \"Missing contract id\"\n  }\n}",          "type": "json"        },        {          "title": "Contract ID does not exist",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": {\n    \"code\": 400,\n    \"message\": \"contract id={id} does not exist\"\n  }\n}",          "type": "json"        },        {          "title": "Invalid Contract Payload:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": {\n    \"code\": 400,\n    \"message\": \"Invalid value(s)\",\n    \"detail\": \"update payload is invaid\"\n  }\n}",          "type": "json"        }      ]    },    "version": "0.1.0",    "filename": "backend/api/contract.py",    "groupTitle": "Contract"  }]
